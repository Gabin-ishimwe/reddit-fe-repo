{"version":3,"sources":["SideNav.js","Header.js","useFetch.js","Main.js","SignUp.js","CreatePost.js","Login.js","OnePost.js","App.js","serviceWorker.js","index.js"],"names":["SideNav","className","href","type","class","map","subreddit","to","Header","useState","rightBar","setRightBar","style","backgroundColor","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","src","id","onClick","Style","UseFetch","url","setData","setIsPending","setError","posts","setPosts","history","useHistory","upvote","a","fetch","method","headers","localStorage","getItem","then","res","json","data","console","log","error","downvote","useEffect","ok","Error","result","catch","err","message","post","_id","likes","image","alt","setItem","push","category","author","date","title","comments","length","Main","SignUp","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","user","body","JSON","stringify","first_name","last_name","token","swal","border","color","onSubmit","for","placeholder","value","onChange","target","required","CreatePost","setCategory","setTitle","caption","setCaption","setImage","form","FormData","append","files","UserLogin","userEmail","setUserEmail","OnePost","name","setName","comment","setComment","displayName","setdisplayName","displayComment","setdisplayComment","like","setLikes","content","names","width","margin","maxWidth","Login","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51485899.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./SideNav.css\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction SideNav() {\n\n  const subreddits = [\n    \"askreddit\",\n    \"worldnews\",\n    \"videos\",\n    \"funny\",\n    'askscience'\n  ];\n  return (\n    <div className=\"sidenav col-md-2\">\n\n      <a href=\"create\">\n        <button type=\"button\" class=\"create-post\">Create Post</button>\n      </a>\n \n      <div className=\"sidenav__link\">\n        <h5><strong>Subreddits</strong></h5>\n        <div className=\"subreddits-list\">\n        <ul className=\"sidenav__subreddit\">\n          \n          {subreddits.map(subreddit => (\n              <li><Link to={`/r/${subreddit}`}>{subreddit}</Link></li>\n          ))}\n        </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n \nexport default SideNav;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\nimport {FaReddit} from 'react-icons/fa';\nimport * as FaIcons from \"react-icons/fa\";\nimport * as IoIcons from \"react-icons/io\";\nimport { useEffect,useState } from \"react\";\n\nfunction Header() {\n\n  const [noun] = useState(\"user_name\");\n  const [rightBar, setRightBar] = useState(false);\n\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-light\" style={{backgroundColor: 'rgb(252, 69, 4)'}}>\n        <div className=\"container-fluid\">\n            <a className=\"navbar-brand text-white \" href=\"/\">\n              <FaReddit/>\n              <span className=\"text-white fw-bold ps-3 pe-5 me-5\" >Reddit</span>  \n            </a>\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            {/* <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\"> */}\n            <div className=\"header__right\">\n\n          <div className=\"header__user\">\n            <img\n              src=\"https://png.pngtree.com/png-clipart/20190614/original/pngtree-female-avatar-vector-icon-png-image_3725439.jpg\"\n            />\n\n            <span>User</span>\n            <FaIcons.FaChevronDown\n            id=\"downArrow\"\n            onClick={() => setRightBar(!rightBar)}\n            Style={{\"color\":\"rgb(252, 69, 4)\"}}\n            />\n              \n          </div>\n          <div className=\"Authorisation\">\n            <Link to=\"/login\" className=\"login link\" >Log In</Link>\n            <Link to=\"\" className=\"bar\" >|</Link>\n            <Link to=\"/signup\" className=\"signup link\">Sign up</Link>\n          </div>\n          </div>\n          </div>\n          {/* </div> */}\n          <div className=\"mainContent\">\n        {rightBar ? (\n          <div className=\"rightBar\">\n            <div className=\"DropItem\" id=\"logout\">\n              <p><a href=\"/login\" style={{\"text-decoration\":\"none\", \"color\":\"black\"}}>Logout</a></p>\n            </div>\n          </div>\n        ) : null}\n      </div>\n\n    </nav>   \n);\n}\n\nexport default Header;\n","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport { BiCommentDetail } from 'react-icons/bi'\nimport { ImArrowUp, ImArrowDown } from 'react-icons/im'\nimport { useHistory } from 'react-router-dom';\n\nconst UseFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(null);\n    const [error, setError] = useState(null);\n    const [posts, setPosts] = useState(null)\n\n    let history = useHistory()\n    const upvote = async (id) => {\n        await fetch(`https://reddit-backend-clone.herokuapp.com/api/v1/posts/${id}/upvote`, {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n            }\n        })\n            .then(res => res.json())\n            .then((data) => console.log(data),\n                (error) => console.log(error))\n    }\n\n    const downvote = async (id) => {\n        await fetch(`https://reddit-backend-clone.herokuapp.com/api/v1/posts/${id}/downvote`, {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n            }\n        })\n            .then(res => res.json())\n            .then((data) => {\n                console.log(data)\n            },\n                (error) => console.log(error))\n    }\n\n    useEffect(() => {\n        fetch(\"https://reddit-backend-clone.herokuapp.com/api/v1/posts\", {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n            }\n        })\n            .then(res => {\n                if (!res.ok) {\n                    throw Error(\"Could not fetch :(\")\n                }\n                return res.json()\n            })\n            .then(result => {\n                setData(result.data)\n                console.log(result)\n                setIsPending(false)\n                setError(null)\n                setPosts(result.data)\n            })\n            .catch(err => {\n                setError(err.message)\n                setIsPending(false)\n            })\n\n    })\n    if (posts !== null) {\n\n        return (\n            <section className=\"posts\">\n                {posts.map((post) => (\n                    <div className=\"card mb-3\" style={{ \"max-width\": \"950px\", \"margin-left\": \"50px\", \"margin-right\": \"50px\", \"margin-top\": \"10px\", \"padding-top\": \"20px\", \"padding-bottom\": \"20px\" }}>\n                        <div className=\"row g-0\">\n                            <div className=\"col-md-1\">\n                                <ImArrowUp className=\"up\" style={{ \"font-color\": \"white\" }} onClick={() => upvote(post._id)} />\n                                <p style={{ \"margin-bottom\": \"0px\" }}>{post.likes}</p>\n                                <ImArrowDown className=\"down\" onClick={() => downvote(post._id)} />\n                            </div>\n                            <div className=\"col-md-3\">\n                                <img src={post.image[0]} className=\"img-fluid rounded-start\" alt=\"...\" style={{ \"max-height\": \"200px\" }} />\n                            </div>\n                            <div className=\"col-md-7\" style={{ \"text-align\": \"left\", \"position\": \"relative\" }} onClick={() => {\n                                localStorage.setItem(\"postId\", post._id)\n                                history.push(\"/view\")\n                            }}>\n                                <div className=\"card-body\">\n                                    <div style={{ \"display\": \"inline-block\" }}>\n                                        <p style={{ \"display\": \"inline-block\", \"padding-right\": \"20px\" }}><small className=\"text-muted\">Category: {post.category}</small></p>\n                                        <p style={{ \"display\": \"inline-block\", \"padding-right\": \"20px\" }}><small className=\"text-muted\">posted by: {post.author}</small></p>\n                                        <p style={{ \"display\": \"inline-block\", \"padding-right\": \"20px\" }}><small className=\"text-muted\">at: {post.date}</small></p>\n                                    </div>\n                                    <h5 className=\"card-title \">{post.title}</h5>\n                                    {/* <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>                      */}\n                                </div>\n                                <div className=\"comments d-inline-flex\" style={{ \"text-align\": \"left\", \"position\": \"absolute\", \"bottom\": \"0px\" }}>\n                                    <BiCommentDetail style={{ \"height\": \"25px\", \"margin-left\": \"15px\", \"margin-right\": \"10px\" }} />\n                                    <p style={{ \"margin-bottom\": \"0px\" }}>{post.comments.length} comments</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ))}\n            </section>\n        )\n    }\n    else {\n        return (\n            <h1>Loading....</h1>\n        )\n    }\n}\n\nexport default UseFetch;","import React from 'react'\nimport './Main.css'\nimport SideNav from './SideNav'\nimport Posts from './Posts'\nimport UseFetch from './useFetch'\n\nfunction Main() {\n    // console.log(props)\n    // const { data: posts, isPending, error } = useFetch(\"https://reddit-backend-clone.herokuapp.com/api/v1/posts\");\n    return (\n        <div className=\"main \">\n            <SideNav />\n            {/* {posts && <Posts posts={posts} />} */}\n            <UseFetch />\n        </div>\n    )\n}\n\nexport default Main\n","// import axios from 'axios';\nimport React from \"react\";\nimport { useState } from 'react';\nimport swal from \"sweetalert\";\n\nconst SignUp = () => {\n    const [firstName, setFirstName] = useState();\n    const [lastName, setLastName] = useState();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [confirmPassword, setConfirmPassword] = useState();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const user = { firstName, lastName, email, password, confirmPassword };\n        console.log(user);\n        if (password === confirmPassword) {\n            await fetch(\"https://reddit-backend-clone.herokuapp.com/api/v1/users/register\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    first_name: firstName,\n                    last_name: lastName,\n                    email: email,\n                    password: password\n                })\n            }).then(res => res.json())\n                .then(data => {\n                    console.log(data)\n                    if (data.message === \"user registered successful\" || data.token) {\n                        swal(\"User registered!!\", \"successfully register\", \"success\")\n                    }\n                },\n                    error => console.log(error))\n\n        }\n        else {\n            swal(\"Passwords don't math!!\", \"Input correct password\", \"error\")\n        }\n\n\n    };\n\n    return (\n        <div className=\"container mt-5 mb-5 col-lg-6\" style={{ border: '1px solid rgb(252, 69, 4)' }}>\n            <h1 className=\"text-center mt-5 mb-3\" style={{ color: 'rgb(252, 69, 4)' }}>SIGN UP</h1>\n            <div className=\"row justify-content-center my-5 me-2 ms-2\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label for=\"username\" className=\"text-left mb-3\">First name:</label>\n                        <input type=\"text\"\n                            className=\"form-control mb-3\"\n                            id=\"username\"\n                            placeholder=\"First Name\"\n                            value={firstName}\n                            onChange={(e) => setFirstName(e.target.value)} required />\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"username\" className=\"text-left mb-3\">Last name:</label>\n                        <input type=\"text\"\n                            className=\"form-control mb-3\"\n                            id=\"username\"\n                            placeholder=\"First Name\"\n                            value={lastName}\n                            onChange={(e) => setLastName(e.target.value)} required />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label for=\"email\" className=\"mb-3\">Email:</label>\n                        <input\n                            type=\"email\"\n                            className=\"form-control mb-3\"\n                            id=\"email\"\n                            value={email}\n                            placeholder=\"email\"\n                            onChange={(e) => setEmail(e.target.value)} required />\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"password\" className=\"mb-3\">Password:</label><br />\n                        <input\n                            type=\"password\"\n                            className=\"form-control mb-3\"\n                            value={password}\n                            id=\"password\"\n                            onChange={(e) => setPassword(e.target.value)} required />\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"confirmPassword\" className=\"mb-3\">Confirm password:</label><br />\n                        <input\n                            type=\"password\"\n                            className=\"form-control mb-3\"\n                            value={confirmPassword}\n                            id=\"confirmPassword\"\n                            onChange={(e) => setConfirmPassword(e.target.value)} required />\n                    </div>\n                    <button type=\"submit\" className=\"btn col-md-12 mt-4 mb-5\" style={{ backgroundColor: 'rgb(252, 69, 4)', color: '#fff' }} >Sign up</button>\n                    <p className=\"text-center\">Already a redditor? <a href=\"/login\" style={{ color: 'rgb(252, 69, 4)' }}>LOG IN</a></p>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;","import React, { Component, useEffect } from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport swal from 'sweetalert';\n\n\nfunction CreatePost() {\n\n    const [category, setCategory] = useState();\n    const [title, setTitle] = useState();\n    const [caption, setCaption] = useState();\n    const [image, setImage] = useState();\n    const history = useHistory()\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const post = { category, title, caption, image };\n        console.log(post);\n        let form = new FormData()\n        form.append(\"title\", title)\n        form.append(\"content\", caption)\n        form.append(\"image\", image)\n        form.append(\"category\", \"lorem ipsum\")\n        await fetch(\"https://reddit-backend-clone.herokuapp.com/api/v1/posts\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n            },\n            body: form\n        }).then(res => res.json())\n            .then((data) => {\n                console.log(data)\n                history.push(\"/\")\n            },\n                (error) => console.log(error))\n\n    };\n    const categories = [\n        \"News\",\n        \"Movie\",\n        \"Music\",\n        \"Entertainment\",\n        \"Arts\",\n        \"Politics\"\n    ]\n\n\n    return (\n        <div className=\"container mt-5 mb-5 col-lg-6\" style={{ border: '1px solid rgb(252, 69, 4)' }}>\n            <h1 className=\"text-center mt-5 mb-3\" style={{ color: 'rgb(252, 69, 4)' }}>CREATE POST</h1>\n            <div className=\"row justify-content-center my-5 me-2 ms-2\">\n                {/* <div className=\"col-lg-\"> */}\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label for=\"category\" className=\"text-left mb-3\">Choose category:</label>\n                        <select type=\"text\"\n                            className=\"form-control mb-3 custom-select\"\n                            id=\"category\"\n                            placeholder=\"Category\"\n                            value={category}\n                            onChange={(e) => setCategory(e.target.value)} required>\n                            {categories.map(category => (\n                                <option value={category}>{category}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"title\" className=\"text-left mb-3\">Title:</label>\n                        <input type=\"text\"\n                            className=\"form-control mb-3\"\n                            id=\"title\"\n                            placeholder=\"Title\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)} required />\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"caption\" className=\"mb-3\">Caption:</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control mb-3\"\n                            id=\"caption\"\n                            value={caption}\n                            placeholder=\"Caption\"\n                            onChange={(e) => setCaption(e.target.value)} required />\n                    </div>\n                    {/* <div className=\"form-group\">\n                            <label for=\"confirmNewPassword\" className=\"mb-3\">Link (optional):</label>\n                            <input type=\"text\" className=\"form-control mb-5\" id=\"confirmNewPassword\" value = {password} placeholder=\"Confirm new password\"/>\n                        </div> */}\n                    <div className=\"form-group\">\n                        <label for=\"confirmNewPassword\" className=\"mb-3\">Image:</label><br />\n                        <div className=\"col-lg-12 border p-5 ps-2\">\n                            <input\n                                type=\"file\"\n                                className=\"form-control-file\"\n                                id=\"image\"\n                                onChange={(e) => setImage(e.target.files[0])} required />\n                        </div>\n                    </div>\n                    <button type=\"submit\" className=\"btn col-md-12 mt-4 mb-5\" style={{ backgroundColor: 'rgb(252, 69, 4)', color: '#fff' }} onClick={handleSubmit}>Post</button>\n                </form>\n                {/* </div> */}\n            </div>\n        </div>\n    );\n\n}\n\n\nexport default CreatePost","// import axios from 'axios';\nimport React from \"react\";\nimport { useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport swal from \"sweetalert\"\n\nconst UserLogin = () => {\n    const [userEmail, setUserEmail] = useState();\n    const [password, setPassword] = useState();\n    let history = useHistory()\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const user = { userEmail, password };\n        console.log(user);\n        await fetch(\"https://reddit-backend-clone.herokuapp.com/api/v1/users/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                email: userEmail,\n                password: password\n            })\n        }).then(res => res.json())\n            .then(data => {\n                console.log(data)\n                if (data.message === \"Invalid password\" || data.message === \"user doesn't exist\") {\n                    swal(\"Invalid credentials!!\", \"Please log in again\", \"warning\")\n                }\n                else if (data.error) {\n                    swal(\"Error!!\", \"Try to log in again\", \"error\")\n                }\n                else {\n                    localStorage.setItem(\"token\", data.token)\n                    history.push(\"/\")\n                }\n            },\n                error => console.log(error))\n\n    };\n\n    return (\n        <div className=\"container mt-5 mb-5 col-lg-6\" style={{ border: '1px solid rgb(252, 69, 4)' }}>\n            <h1 className=\"text-center mt-5 mb-3\" style={{ color: 'rgb(252, 69, 4)' }}>LOG IN</h1>\n            <div className=\"row justify-content-center my-5 me-2 ms-2\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"form-group\">\n                        <label for=\"username\" className=\"text-left mb-3\">Email:</label>\n                        <input type=\"text\"\n                            className=\"form-control mb-3\"\n                            id=\"username\"\n                            placeholder=\"Email\"\n                            value={userEmail}\n                            onChange={(e) => setUserEmail(e.target.value)} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label for=\"password\" className=\"mb-3\">Password:</label><br />\n                        <input\n                            type=\"password\"\n                            className=\"form-control mb-3\"\n                            value={password}\n                            placeholder=\"Password\"\n                            id=\"password\"\n                            onChange={(e) => setPassword(e.target.value)} />\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary col-md-12 mt-4 mb-5\" style={{ backgroundColor: 'rgb(252, 69, 4)', color: '#fff', border: 'none' }}>login</button>\n                    <p className=\"text-center\">Don't have an account? <a href=\"/signup\" style={{ color: 'rgb(252, 69, 4)' }}>Sign up</a></p>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default UserLogin;","// import useFetch from 'useFetch';\nimport { BiCommentDetail } from 'react-icons/bi'\nimport { ImArrowUp, ImArrowDown } from 'react-icons/im'\nimport { useEffect, useState } from 'react';\nimport React from 'react';\n\nconst OnePost = () => {\n    const [name, setName] = useState();\n    const [comment, setComment] = useState();\n    const [displayName, setdisplayName] = useState()\n    const [displayComment, setdisplayComment] = useState()\n    // const [addedComment, setAddedComment] = useState();\n    // const [commentor, setCommentor] = useState();\n    const [posts, setPosts] = useState(null)\n    const [like, setLikes] = useState(1)\n\n    useEffect(() => {\n        fetch(`https://reddit-backend-clone.herokuapp.com/api/v1/posts/${localStorage.getItem(\"postId\")}`, {\n            method: \"GET\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n            }\n        }).then(res => res.json())\n            .then(data => {\n                console.log(data)\n                setPosts(data)\n            })\n    }, [])\n\n    const upvote = async (id) => {\n        await fetch(`https://reddit-backend-clone.herokuapp.com/api/v1/posts/${id}/upvote`, {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n            }\n        })\n            .then(res => res.json())\n            .then((data) => {\n                console.log(data)\n                setLikes(data.data.likes)\n                console.log(like)\n            },\n                (error) => console.log(error))\n    }\n\n    const downvote = async (id) => {\n        await fetch(`https://reddit-backend-clone.herokuapp.com/api/v1/posts/${id}/downvote`, {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n            }\n        })\n            .then(res => res.json())\n            .then((data) => {\n                console.log(data)\n                setLikes(data.data.likes)\n                console.log(like)\n            },\n                (error) => console.log(error))\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        await fetch(`https://reddit-backend-clone.herokuapp.com/api/v1/posts/${localStorage.getItem(\"postId\")}/comments`, {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: name,\n                content: comment\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                setdisplayName(data.data.name)\n                setdisplayComment(data.data.content)\n            })\n\n        const names = { name }\n        const comments = { comment };\n\n        console.log(comments, names);\n\n    };\n    if (posts !== null) {\n        return (\n\n            <div className=\"container mt-5 mb-5 p-5 \" style={{ border: '1px solid rgb(252, 69, 4)' }}>\n                <div className=\"card mb-3\" style={{ border: '1px solid rgb(252, 69, 4)', \"max-width\": \"950px\", \"margin-left\": \"50px\", \"margin-right\": \"50px\", \"margin-top\": \"10px\", \"padding-top\": \"20px\", \"padding-bottom\": \"20px\" }}>\n                    <div className=\"row g-0 ms-4 me-4\">\n                        <div className=\"row\">\n                            <div className=\"col-md-1\">\n                                <ImArrowUp className=\"up\" style={{ \"font-color\": \"white\" }} onClick={() => upvote(localStorage.getItem(\"postId\"))} />\n                                <p style={{ \"margin-bottom\": \"0px\" }}>{posts.data.likes}</p>\n                                <ImArrowDown className=\"down\" onClick={() => downvote(localStorage.getItem(\"postId\"))} />\n                            </div>\n                            <div className=\"col-md-3\">\n                                <img src={posts.data.image[0]} className=\"img-fluid rounded-start\" alt=\"...\" style={{ \"max-height\": \"200px\" }} />\n                            </div>\n                        </div>\n                        <div className=\"col-md-7\" style={{ \"text-align\": \"left\", \"position\": \"relative\" }}>\n                            <div className=\"card-body\">\n                                {/* <div style={{\"display\":\"inline-block\"}}>\n                                    <p style={{\"display\":\"inline-block\",\"padding-right\":\"20px\" }}><small className=\"text-muted\">Community: {posts.community}</small></p>\n                                    <p style={{\"display\":\"inline-block\",\"padding-right\":\"20px\"}}><small className=\"text-muted\">posted by: {posts.author}</small></p>\n                                    <p style={{\"display\":\"inline-block\",\"padding-right\":\"20px\"}}><small className=\"text-muted\">at: {posts.date}</small></p>\n                                </div> */}\n                                <h5 className=\"card-title \">{posts.data.title}</h5>\n                                <p className=\"card-text mt-3 mb-5\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n                            </div>\n                            <div className=\"comments d-inline-flex\" style={{ \"text-align\": \"left\", \"position\": \"absolute\", \"bottom\": \"0px\" }}>\n                                <BiCommentDetail style={{ \"height\": \"25px\", \"margin-left\": \"20px\", \"margin-right\": \"10px\" }} />\n                                <p style={{ \"margin-bottom\": \"0px\" }}>{posts.data.comments.length} comments</p>\n                            </div>\n                        </div>\n\n                        {posts.data.comments.map(comment => (\n                            <div className=\"container rounded\" style={{ width: '90.5%', backgroundColor: '#fff', border: '1px solid rgb(252, 69, 4)', margin: \"10px\" }}>\n                                {/* <span >Name: </span> */}\n                                <span >{comment.name}</span>\n                                {/* <span>Comment: </span> */}\n                                <p style={{ maxWidth: '100%' }}>{comment.content}</p>\n                            </div>\n                        ))}\n                        {(displayName && displayComment) &&\n                            <div className=\"container rounded\" style={{ width: '90.5%', backgroundColor: '#fff', border: '1px solid rgb(252, 69, 4)', margin: \"10px\" }}>\n                                <span >{displayName}</span>\n                                <p style={{ maxWidth: '100%' }}>{displayComment}</p>\n                            </div>\n                        }\n\n                        <div className=\"container mt-5 mb-5 col-lg-12 rounded ps-5 pe-5\" style={{ border: '1px solid rgb(252, 69, 4)' }} >\n                            <div className=\"row justify-content-center\">\n                                <form onSubmit={handleSubmit}>\n                                    <div className=\"form-group\">\n                                        <label for=\"name\" className=\"text-left mt-4 mb-3\">Name</label>\n                                        <input type=\"text\"\n                                            className=\"form-control mb-3\"\n                                            id=\"name\"\n                                            placeholder=\"name\"\n                                            value={name}\n                                            onChange={(e) => setName(e.target.value)} />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label for=\"comment\" className=\"text-left mb-3\">Comment:</label>\n                                        <textarea type=\"text\"\n                                            className=\"form-control mb-3\"\n                                            id=\"comment\"\n                                            placeholder=\"comment\"\n                                            value={comment}\n                                            onChange={(e) => setComment(e.target.value)} />\n                                    </div>\n\n                                    <button type=\"submit\" className=\"btn col-md-12 mt-4 mb-4\" style={{ backgroundColor: 'rgb(252, 69, 4)', color: '#fff' }}>Comment</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                {/* {(displayName !== null && displayComment !== null) ?\n                    <div className=\"container rounded\" style={{ width: '90.5%', backgroundColor: '#fff', border: '1px solid rgb(252, 69, 4)' }}>\n                        <span >Name: </span>\n                        <span >{displayName}</span><br></br>\n                        <span>Comment: </span>\n                        <p style={{ maxWidth: '100%' }}>{displayComment}</p>\n                    </div>\n                    : <h1>comment loading...</h1>\n                } */}\n\n            </div>\n        );\n    }\n    else {\n        return (<h1>loading...</h1>)\n    }\n\n}\n\nexport default OnePost;\n","import React from \"react\";\nimport \"./App.css\";\nimport SideNav from \"./SideNav\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Posts from \"./Posts\";\nimport SignUp from \"./SignUp\";\nimport useFetch from \"./useFetch\";\nimport CreatePost from \"./CreatePost\";\nimport UserLogin from \"./Login\";\nimport OnePost from \"./OnePost\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction Login() {\n  // const fetchData = async (id) => {\n  //   return await fetch(`https://reddit-backend-clone.herokuapp.com/api/v1/posts/${id}`, {\n  //     method: \"GET\",\n  //     headers: {\n  //       \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n  //     }\n  //   }).then(res => res.json())\n  //     .then(data => console.log(data))\n  // }\n  // console.log(fetchData(localStorage.getItem(\"postId\")))\n  return (\n    <div className=\"App container w-100 p-3 mt-0\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Main />\n          </Route>\n          <Route exact path=\"/create\">\n            <CreatePost />\n          </Route>\n          <Route exact path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route exact path=\"/login\">\n            <UserLogin />\n          </Route>\n          <Route exact path=\"/view\">\n            <OnePost />\n\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default Login;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}